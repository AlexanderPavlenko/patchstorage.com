{
	"description": "Textastic Code Completion for Mozaic",
	"uuid": "da1e0d6d-5b61-4de7-9a72-fa752ca71d74",

	"completionSets": [
	  {
	    "name": "mozaic.keywords.control",
			"defaultAppend": "",
	    "strings": [
	      {"string": "if", "append": " ${1:cond}\n  $0\nendif" },
	      {"string": "for", "append": " ${1:idx} = ${2:0} to ${3:15}\n  $0\nendfor" },
	      {"string": "repeat", "append": "\n  $0\nuntil ${1:cond}" },
	      {"string": "while", "append": " ${1:cond}\n  $0\nendwhile" }
	    ]
	  },
	  {
	    "name": "mozaic.keywords.else",
			"defaultAppend": "",
	    "strings": [
	      {"string": "elseif", "append": " ${1:cond}\n  $0" },
	      {"string": "else", "append": "\n  $0" }
	    ]
	  },
	  {
	    "name": "mozaic.keywords.endif",
			"defaultAppend": "",
	    "strings": [
	      "endif"
	    ]
	  },
	  {
	    "name": "mozaic.commands",
			"defaultAppend": "",
	    "strings": [
 	      {"string": "Call", "append": " @${1:event}" },
	      // Midi
	    	{"string": "SendMIDIOut", "append": " ${1:byte1},${2:byte2},${3:byte3}" },
	      {"string": "SendMIDINoteOn", "append": " ${1:chan},${2:note},${3:velocity}" },
	      {"string": "SendMIDINoteOff", "append": " ${1:chan},${2:note},${3:velocity}" },
	      {"string": "SendMIDICC", "append": " ${1:chan},${2:controller},${3:value}" },
	      {"string": "SendMIDIPitchbend", "append": " ${1:chan},${2:value}" },
	      {"string": "SendMIDIProgramChange", "append": " ${1:chan},${2:value}" },
	      {"string": "SendMIDIBankSelect", "append": " ${1:chan},${2:msb},${3:lsb}" },
	      "SendMIDIThru",
	      {"string": "SendMIDIThruOnCh", "append": " ${1:chan}" },
	      {"string": "SendMIDIProgramChange", "append": " ${1:chan},${2:paqtch}" },
	      {"string": "ConfigureMPE", "append": " ${1:lower},${2:upper}" },
	      // Sysex
	      {"string": "SendSysex", "append": " ${1:array},${2:length}" },
        "SendSysexThru",
	      {"string": "ReceiveSysex", "append": " ${1:array}" },
        // AU and host
	      {"string": "SetShortName", "append": " {${1:name}}" },
	      {"string": "SetMetroPPQN", "append": " ${1:ppqn}" },
	      {"string": "SetMetroSwing", "append": " ${1:swing}" },
	      {"string": "SetAUParameter", "append": " ${1:param},${2:value}" },
	      // Timer and LFO
        "StartTimer",
        "StopTimer",
        "ResetTimer",
	      {"string": "SetTimerInterval", "append": " ${1:msec}" },
 	      {"string": "SetupLFO", "append": " ${1:lfo},${2:min},${3:max},${4:sync},${5:freq}" },
	      {"string": "SetLFOType", "append": " ${1:lfo},{${2:type}}" },
	      {"string": "ResetLFO", "append": " ${1:lfo},${2:phase}" },
        // Scales
 	      {"string": "CustomScale", "append": " ${1:c},${2:c_s},${3:d},${4:d_s},${5:e},${6:f},${7:f_s},${8:g},${9:g_s},${10:a},${11:a_s},${12:b}" },
	      {"string": "PresetScale", "append": " {${1:scale}}" },
	      {"string": "SetRootNote", "append": " ${1:root}" },
	      // GUI and interaction
        {"string": "ShowLayout", "append": " ${1:layout}" },
 	      {"string": "LabelPad", "append": " ${1:pad},{${2:label}}" },
	      {"string": "LabelPads", "append": " {${1:title}}" },
	      {"string": "LabelKnobs", "append": " {${1:title}}" },
	      {"string": "LabelXY", "append": " {${1:title}}" },
	      {"string": "LabelKnob", "append": " ${1:knob},{${2:label}}" },
	      {"string": "SetKnobValue", "append": " ${1:knob},${2:value}" },
	      {"string": "LatchPad", "append": " ${1:pad},${2:state}" },
	      {"string": "FlashPad", "append": " ${1:pad}" },
	      {"string": "ColorPad", "append": " ${1:pad},${2:value}" },
        "FlashUserLed",
	      {"string": "SetXYValues", "append": " ${1:x},${2:y}" },
	      "Log q",
	      {"string": "Log {", "append": "${1:text}}" },
	      {"string": "Log {t},v", "replace": "Log {${1:text}},${2:expr}" },
        "LogTime",
        "Exit",
        // Math and arrays
	      {"string": "FillArray", "append": " ${1:array},${2:value},${3:numcells}" },
 	      {"string": "CopyArray", "append": " ${1:source},${2:dest},${3:numcells}" },
	      {"string": "Inc", "append": " ${1:var}" },
	      {"string": "Dec", "append": " ${1:var}" },
        // Note state
	      {"string": "ResetNoteStates", "append": " ${1:init_value}" },
 	      {"string": "SetNoteState", "append": " ${1:chan},${2:note},${3:value}" }
	    ]
	  },
	  {
	    "name": "mozaic.functions",
			"defaultAppend": "",
	    "strings": [
	      // Midi
	      "MIDIChannel",
	      "MIDICommand",
	      "MIDINote",
	      "MIDIVelocity",
	      "MIDIByte1",
	      "MIDIByte2",
	      "MIDIByte3",
	      "MIDISustainPedalDown",
	      // Sysec
	      "SysexSize",
	      // AU and host
        "HostTempo",
        "HostBar",
        "HostBeat",
        "HostBeatsPerMeasure",
        "HostRunning",
        "CurrentMetroPulse",
        "LastAUParameter",
        "QuarterNote",
        "SystemTime",
	    	{"string": "GetAUParameter", "append": " ${1:param}" },
        // LFO
	    	{"string": "GetLFOValue", "append": " ${1:lfo}" },
        // Scales
	    	{"string": "InScale", "append": " ${1:note}" },
	    	{"string": "ScaleQuantize", "append": " ${1:note}" },
	    	// GUI and interaction
        "GetXValue",
        "GetYValue",
	    	{"string": "GetXYMorphValue", "append": " ${1:topleft},${2:topright},${3:bottomleft},${4:bottomright}" },
	    	{"string": "GetKnobValue", "append": " ${1:knob}" },
        "LastKnob",
        "LastPad",
        "LastPadVelocity",
        "MotionPitch",
        "MotionRoll",
        "MotionYaw",
        "ShiftPressed",
	    	{"string": "PadState", "append": " ${1:pad}" },
	    	// Math and variables
	    	{"string": "Unassigned", "append": " ${1:var}" },
	    	{"string": "Round", "append": " ${1:value}" },
	    	{"string": "RoundUp", "append": " ${1:value}" },
	    	{"string": "RoundDown", "append": " ${1:value}" },
	    	{"string": "Random", "append": " ${1:min},${2:max}" },
	    	{"string": "Clip", "append": " ${1:var},${2:min},${3:max}" },
	    	{"string": "TranslateCurve", "append": " ${1:value},${2:curve},${3:min},${4:max}" },
	    	{"string": "TranslateScale", "append": " ${1:value},${2:in_min},${3:in_max},${4:out_min},${5:out_max}" },
	    	{"string": "Sin", "append": " ${1:value}" },
	    	{"string": "Cos", "append": " ${1:value}" },
	    	{"string": "Tan", "append": " ${1:value}" },
	    	{"string": "Tanh", "append": " ${1:value}" },
	    	{"string": "Exp", "append": " ${1:value}" },
	    	{"string": "Sqrt", "append": " ${1:value}" },
	    	{"string": "Abs", "append": " ${1:value}" },
	    	{"string": "Logn", "append": " ${1:value}" },
	    	{"string": "Log10", "append": " ${1:value}" },
	    	{"string": "Pow", "append": " ${1:base},${2:base}" },
	    	{"string": "Div", "append": " ${1:value},${2:divisor}" },
        // Notestate
	    	{"string": "GetNoteState", "append": " ${1:chan},${2:note}" },
	    	"YES",
	    	"NO",
	    	"TRUE",
	    	"FALSE",
	    	"not"
      ]
    },
    {
	    "name": "mozaic.start.and.or",
			"defaultAppend": " ",
	    "strings": [
	      "and",
	      "or"
      ]
    },    
    {
	    "name": "mozaic.string.functions",
			"defaultAppend": "",
	    "strings": [
	      "RootNoteName",
	    	{"string": "ScaleName", "append": " ${1:scale}" },
	    	{"string": "NoteName", "append": " ${1:note},${2:NO}" },	      
	    	{"string": "NoteName n,YES", "replace": "NoteName ${1:note},YES" }
      ]
    },

    {
	    "name": "mozaic.events",
			"defaultAppend": "\n  $0\n@End\n",
	    "strings": [
	      "@OnLoad",
	      "@Description",
	      "@OnMidiInput",
	      "@OnMidiNote",
	      "@OnMidiNoteOn",
	      "@OnMidiNoteOff",
	      "@OnMidiCC",
	      "@OnSysex",
	      "@OnPedalDown",
	      "@OnPedalUp",
	      "@OnHostStart",
	      "@OnHostStop",
	      "@OnNewBar",
	      "@OnNewBeat",
	      "@OnMetroPulse",
	      "@OnTimer",
	      "@OnPadDown",
	      "@OnPadUp",
	      "@OnShiftDown",
	      "@OnShiftUp",
	      "@OnKnobChange",
	      "@OnXYChange",
	      "@OnAuParameter"
      ]
    },
    {
	    "name": "mozaic.user.event",
	    "strings": [
 	    	{"string": "@AnEvent", "replace": "@${1:AnEvent}\n  $0\n@End\n" }
      ]
    }
	],

	"contexts": [
			{
			"description": "Outside event blocks",
			"scope": "source.mozaic - mozaic.block - mozaic.comment",
			"pattern": "^@[a-zA-Z]*",
			"completionCaqptureIndex": 1,
			"completionSetNames": [
				"mozaic.events",
				"mozaic.user.event"
			]
		},
		{
			"description": "Inside event blocks but outside expression",
			"scope": "source.mozaic mozaic.block - mozaic.expression - mozaic.error - mozaic.comment - mozaic.string",
			"pattern": "\\b([a-zA-Z]+)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"mozaic.keywords.control",
				"mozaic.commands"
			]
		},
		{
			"description": "Inside expressions",
			"scope": "source.mozaic mozaic.block mozaic.expression - mozaic.error - mozaic.comment - mozaic.string",
			"pattern": "\\b([a-zA-Z]+)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"mozaic.functions"
			]
		},
		{
			"description": "Between expressions",
			"scope": "source.mozaic mozaic.block mozaic.startandor - mozaic.error - mozaic.comment - mozaic.string",
			"pattern": "\\b([a-zA-Z]+)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"mozaic.start.and.or"
			]
		},
		{
			"description": "Inside expressions with stringfunctions allowed",
			"scope": "source.mozaic mozaic.block mozaic.stringexpression - mozaic.error - mozaic.comment - mozaic.string",
			"pattern": "\\b([a-zA-Z]+)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"mozaic.string.functions"
			]
		},
		{
			"description": "Inside IF block",
			"scope": "source.mozaic mozaic.ifblock - mozaic.expression - mozaic.error - mozaic.comment - mozaic.string",
			"pattern": "\\b([a-zA-Z]+)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"mozaic.keywords.else",
				"mozaic.keywords.endif"
			]
		},
		{
			"description": "Inside ELSE block",
			"scope": "source.mozaic mozaic.elseblock - mozaic.expression - mozaic.error - mozaic.comment - mozaic.string",
			"pattern": "\\b([a-zA-Z]+)",
			"completionCaptureIndex": 1,
			"completionSetNames": [
				"mozaic.keywords.endif"
			]
		}
	]
}